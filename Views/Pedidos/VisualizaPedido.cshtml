@model VidracariaDoMarcinho.Models.Orcamento

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vidraçaria do Marcinho</title>
    <link rel="stylesheet" href="~/css/reset.css">
    <link rel="stylesheet" href="~/css/style.css">
</head>
<body>
    <!-- barra superior -->
    <div class="borda_superior">
        <a class="style-botao-a" href="@Url.Action("Index", "Home")">
            <div class="borda_superior_botao">
                <p class="texto_botao_borda_superior">Home</p>
            </div>
        </a>
    </div>

    <h2>Detalhes do Pedido</h2>

    <p><strong>Id:</strong> @Model.Id</p>
    <p><strong>Cliente:</strong> @Model.Cliente?.Nome</p>
    <p><strong>Data:</strong> @Model.Data.ToString("dd/MM/yyyy HH:mm")</p>
    <p><strong>Status:</strong> @Model.Status</p>
    <p><strong>Total:</strong> @Model.Total.ToString("C")</p>

    <a class="hyperlink_tabela" href="@Url.Action("Index", "Pedidos")">
        <div class="botao_tabela">Voltar</div>
    </a>

    <div class="formulario">
        @using (@Html.BeginForm("CrudPedido", "Pedidos", FormMethod.Post, new { id = "form-crud-pedido" }))
        {

            @* Fazer isso em todos campos *@
            @Html.LabelFor(model => @model.Id, htmlAttributes: new { @class = "id-pedido texto-form" })

            <br />
            <input asp-for="Id" class="id-pedido-input input-box texto-form" readonly="readonly" />
            <br />

            @* Nome*@
            @Html.LabelFor(model => model.Cliente.Nome, htmlAttributes: new { @class = "nome-usuario texto-form" })

            <br />
            <input asp-for="Cliente.Nome" class="cliente-pedido-input input-box texto-form" readonly="readonly" />

            @* @Html.EditorFor(model => model.Cliente.Nome, new { htmlAttributes = new { @class = "nome-usuario-input input-box texto-form" } }) *@
            <br />

            @* CPF *@
            @Html.LabelFor(model => model.Cliente.CPF, htmlAttributes: new { @class = "cpf-usuario texto-form" })

            <br />
            <input asp-for="Cliente.CPF" class="cpf-cliente-input input-box texto-form" readonly="readonly" />

            <br />

            @* Telefone *@

            @Html.LabelFor(model => model.Cliente.Telefone, htmlAttributes: new { @class = "telefone-usuario texto-form" })

            <br />
            <input asp-for="Cliente.Telefone" class="cliente-pedido-input input-box texto-form" readonly="readonly" />

            <br />

            @* Status *@
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "status-pedido texto-form" })

            <br />
            @Html.DropDownListFor(model => model.Status, (List<SelectListItem>)ViewBag.StatusOptions, new { @class = "status-pedido-input input-box texto-form" })
            <br>

            <br />
            @* local instalação *@
            @Html.LabelFor(model => model.LocalInstalacao, htmlAttributes: new { @class = "instalacao texto-form" })

            <br />
            @Html.EditorFor(model => model.LocalInstalacao, new { htmlAttributes = new { @class = "instalacao-input input-box texto-form" } })
            <br />

            @* obs *@
            @Html.LabelFor(model => model.Observacoes, htmlAttributes: new { @class = "obs texto-form" })

            <br />
            @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "obs-input input-box texto-form" } })
            <br />

            @* total *@
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "total texto-form" })

            <br />
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "total-input input-box texto-form" } })
            <br />

            @* parcelas *@
            @Html.LabelFor(model => model.Parcelas, htmlAttributes: new { @class = "parcelas texto-form" })

            <br />
            <input asp-for="Parcelas" class="cliente-pedido-input input-box texto-form" readonly="readonly" />

            <br />

            @* parcelas pagas *@
            @Html.LabelFor(model => model.ParcelasPagas, htmlAttributes: new { @class = "parcelas-pagas texto-form" })

            <br />
            @Html.EditorFor(model => model.ParcelasPagas, new { htmlAttributes = new { @class = "parcelas-pagas-input input-box texto-form", Type = "number", min = "1"} })
            <br />

            @* Gasolina *@
            @Html.LabelFor(model => model.Gasolina, htmlAttributes: new { @class = "gasolina-pagas texto-form" })

            <br />
            @Html.EditorFor(model => model.Gasolina, new { htmlAttributes = new { @class = "gasolina-input input-box texto-form" } })
            <br />

            @* Silicone *@
            @Html.LabelFor(model => model.Silicone, htmlAttributes: new { @class = "silicone-pagas texto-form" })

            <br />
            @Html.EditorFor(model => model.Silicone, new { htmlAttributes = new { @class = "silicone-pagas-input input-box texto-form"} })
            <br />

            @* Box *@
            @Html.LabelFor(model => model.Box, htmlAttributes: new { @class = "box-pagas texto-form" })

            <br />
            @Html.EditorFor(model => model.Box, new { htmlAttributes = new { @class = "box-pagas-input input-box texto-form" } })
            <br />

            @* Valor Parcelas *@
            @Html.LabelFor(model => model.ValorParcelas, htmlAttributes: new { @class = "valor-parcelas texto-form" })

            <br />
            @Html.EditorFor(model => model.ValorParcelas, new { htmlAttributes = new { @class = "valor-parcelas-pagas-input input-box texto-form" } })
            <br />

            @foreach (var item in Model.Itens)
            {
                <div>
                    <label class="silicone-pagas texto-form">ID do Item</label>
                    <br />
                    <input type="text" value="@item.Id" class="silicone-pagas-input input-box texto-form" readonly />
                    <br />
                </div>
            }






            <br />
            <button type="submit" class="btn btn-primary rounded-pill px-4">Salvar</button>

            @* <div class="text-center campo-de-texto">
                <a href="@Url.Action("Index", "Clientes")" class="btn btn-secondary rounded-pill px-4">Voltar</a>
                <a href="@Url.Action("EditarCliente", "Clientes", new { cpf = @Model.CPF })" class="btn btn-warning rounded-pill px-4">Editar</a>
            </div> *@
        }
    </div>

</body>
</html>
